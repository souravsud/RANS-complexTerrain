sampleLines // Name of your sample function object
{
    type            sets; // Use 'sets' for sampling lines
    functionObjectLibs ("libsampling.so"); // Ensure this library is loaded

    outputControl   timeStep;
    outputInterval  100; // Write sampled data every 100 time steps (can be less frequent than probes)

    setFormat       foam; // Output format (e.g., 'foam' for ParaView, 'xy' for plotting)
    writeFields     (U k); // Fields to sample

    surfaceFormat   foamFile; // For sets, often foamFile
    interpolationScheme cellPoint; // Interpolation method (cellPoint is generally good)

    // These settings control which data to write for the samples
    writeFlags      
    (
        faceCentre
        raw
        nearestCell
        nearestPatch
    );

    sets // Define the actual sampling lines
    (
        // Line at domain center (same X, Y as probes)
        centerLine
        {
            type            uniform; // Uniformly spaced points along the line
            axis            z;       // Sample along the Z-axis (vertical)
            start           (609340 4395745 0); // Start of the line (X Y Z)
            end             (609340 4395745 1000); // End of the line (X Y Z)
                                                  // Extend up to your domain height or higher
            nPoints         100;     // Number of points along the line
        }

        // Example: Line upstream of the terrain
        // Adjust X, Y to be 1km upstream of your terrain's leading edge
        // Assuming terrain starts around X=6km in your current setup
        upstreamLine
        {
            type            uniform;
            axis            z;
            start           (608340 4395745 0); // Example: 1km upstream of center X
            end             (608340 4395745 1000);
            nPoints         100;
        }

        // Example: Line downstream of the terrain
        // Adjust X, Y to be 1km downstream of your terrain's trailing edge
        // Assuming terrain ends around X=6km in your current setup
        downstreamLine
        {
            type            uniform;
            axis            z;
            start           (610340 4395745 0); // Example: 1km downstream of center X
            end             (610340 4395745 1000);
            nPoints         100;
        }

        // You can add more lines as needed (e.g., across peaks, valleys, etc.)
    );
}
